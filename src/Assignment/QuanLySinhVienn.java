/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Assignment;

import Assignment.ClockThread.ClockThread;
import static Assignment.Login.urlSQL;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author HP
 */
public class QuanLySinhVienn extends javax.swing.JFrame {

    // lưu trữ ảnh
    public final String PATH_IMAGE_SV = "D:\\ImageJava3\\";

    private String header[] = {"Mã SV", "Họ Tên", "Email", "Số ĐT", "Giới Tính", "Địa Chỉ", "Hình"};
    private DefaultTableModel tblSinhVienModel = new DefaultTableModel(header, 0);
    String fileNamePic = "";

    /**
     * Creates new form QuanLySinhVienn
     */
    public QuanLySinhVienn() {
        initComponents();
        this.setLocationRelativeTo(null);
        loadDataToTable();
        initClock();
        buttonGroup1.add(rdoNam);
        buttonGroup1.add(rdoNu);
    }

    String urlSQL = "jdbc:sqlserver://localhost:1433;databaseName =App_Poly;userName=sa;password=123456";

    private void initClock() {
        ClockThread th = new ClockThread(tblClock);
        th.start();
    }

    public void loadDataToTable() {
        Connection connect = null;
        Statement st = null;
        ResultSet rs = null;
        try {
            connect = DriverManager.getConnection(urlSQL);
            String sql = "select * from students";
            st = connect.createStatement();
            rs = st.executeQuery(sql);
            Vector sv = null;
            tblSinhVienModel.setRowCount(0);
            if (rs.isBeforeFirst() == false) {
                JOptionPane.showMessageDialog(this, "chưa có sinh viên");
                return;
            }
            while (rs.next()) {
                sv = new Vector();
                sv.add(rs.getString("maSV"));
                sv.add(rs.getString("hoTen"));
                sv.add(rs.getString("email"));
                sv.add(rs.getString("soDT"));
                sv.add(rs.getString("goiTinh"));
                sv.add(rs.getString("diaChi"));
                sv.add(rs.getString("hinh"));
                tblSinhVienModel.addRow(sv);
            }
            tblSinhVien.setModel(tblSinhVienModel);
            connect.close();
            st.close();
            rs.close();
        } catch (HeadlessException | SQLException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaSV = new javax.swing.JTextField();
        txtUsername = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        rdoNam = new javax.swing.JRadioButton();
        rdoNu = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAddress = new javax.swing.JTextArea();
        txtSoDT = new javax.swing.JTextField();
        btnNew = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        tblHinh = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSinhVien = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        tblClock = new javax.swing.JLabel();
        btnDangXuat = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Mã SV");

        jLabel3.setText("Họ Tên");

        jLabel4.setText("Email");

        jLabel5.setText("Số ĐT");

        jLabel6.setText("Giới tính");

        jLabel7.setText("Địa chỉ");

        rdoNam.setText("Nam");

        rdoNu.setText("Nữ");

        txtAddress.setColumns(20);
        txtAddress.setRows(5);
        jScrollPane1.setViewportView(txtAddress);

        btnNew.setForeground(new java.awt.Color(0, 0, 255));
        btnNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assignment/Images/new.png"))); // NOI18N
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnSave.setForeground(new java.awt.Color(0, 0, 255));
        btnSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assignment/Images/save.png"))); // NOI18N
        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnDelete.setForeground(new java.awt.Color(0, 0, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assignment/Images/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setForeground(new java.awt.Color(0, 0, 255));
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assignment/Images/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        tblHinh.setText("               Avatar");
        tblHinh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblHinh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHinhMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                tblHinhMouseEntered(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addGap(22, 22, 22)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdoNam)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdoNu))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(31, 31, 31))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(26, 26, 26)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtUsername, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(tblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtMaSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtSoDT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rdoNam)
                            .addComponent(rdoNu)))
                    .addComponent(tblHinh, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnNew)
                            .addComponent(btnSave))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(38, Short.MAX_VALUE))
        );

        tblSinhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã SV", "Họ tên", "Email", "Số ĐT", "Giới tính", "Địa chỉ", "Hình"
            }
        ));
        tblSinhVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSinhVienMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSinhVien);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Quản Lý Sinh Viên");

        tblClock.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        tblClock.setForeground(new java.awt.Color(255, 0, 0));
        tblClock.setText("00:00:00");

        btnDangXuat.setForeground(new java.awt.Color(255, 0, 0));
        btnDangXuat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Assignment/Images/icons8-prev-25.png"))); // NOI18N
        btnDangXuat.setText("Come back");
        btnDangXuat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangXuatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(tblClock, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(82, 82, 82)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDangXuat)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(tblClock, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE))
                    .addComponent(btnDangXuat, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tblClock.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        Resert();
    }//GEN-LAST:event_btnNewActionPerformed

    private void tblSinhVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSinhVienMouseClicked
        int row = tblSinhVien.getSelectedRow();
        DoDuLieuLenComponent(row);
    }//GEN-LAST:event_tblSinhVienMouseClicked

    // check Email
    public boolean checkEmail(String email) {
        String reEmail = "\\w+@\\w+\\.\\w+.\\w+";

        if (!email.matches(reEmail)) {
            JOptionPane.showMessageDialog(this, "Sai định dạng Email!");
            return false;
        }
        return true;
    }

    // check số điện thoại
    public boolean checkSoDT(String Phone) {
        String rePhone = "0[0-9]{9,10}";
        if (!Phone.matches(rePhone)) {
            JOptionPane.showMessageDialog(this, "Sai định dạng Số điện thoại!");
            return false;
        }
        return true;
    }

    // check Mã Sinh Viên
    public boolean checkMaSV(String maSV) {
        ArrayList<String> listMaSV = new ArrayList<String>();
        Connection connect = null;
        Statement st = null;
        try {
            connect = DriverManager.getConnection(urlSQL);
            st = connect.createStatement();
            String sql = "";
            sql = "select  *from grade where maSV = ?;";
            PreparedStatement stm = connect.prepareStatement(sql);
            stm.setString(1, maSV);
            ResultSet rs = stm.executeQuery();
            while (rs.next()) {
                String maSVTimKiem = rs.getString("maSV");
                listMaSV.add(maSVTimKiem);
            }
            // clean-up environment
            rs.close();
            st.close();
            connect.close();
            if (listMaSV.size() > 0) {
                JOptionPane.showMessageDialog(this, "MaSV đã Tồn Tại");
                return false;
            } else {
                return true;
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
        return false;
    }

    // btn Save
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (txtMaSV.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Mã SV !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtMaSV.requestFocus();
            txtMaSV.setBackground(Color.yellow);
        } else if (txtUsername.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Tên SV !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtUsername.requestFocus();
            txtMaSV.setBackground(Color.white);
            txtUsername.setBackground(Color.yellow);
        } else if (txtEmail.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Email !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtEmail.requestFocus();
            txtUsername.setBackground(Color.white);
            txtEmail.setBackground(Color.yellow);
        } else if (txtSoDT.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Số điện thoại !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtSoDT.requestFocus();
            txtEmail.setBackground(Color.white);
            txtSoDT.setBackground(Color.yellow);
        } else if (!rdoNam.isSelected() && !rdoNu.isSelected()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn giới tính !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            rdoNam.requestFocus();
        } else if (txtAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Địa chỉ !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocus();
            txtSoDT.setBackground(Color.white);
            txtAddress.setBackground(Color.yellow);
        } else {
            try {
                boolean flagMaSV;
                boolean flagSoDT;
                boolean flagEmail;

                Connection connect = DriverManager.getConnection(urlSQL, "sa", "123456");
                String sql = "insert into students(maSV,hoTen,email,soDT,goiTinh,diaChi,hinh) values(?,?,?,?,?,?,?)";
                PreparedStatement stm = connect.prepareStatement(sql);

                if (flagMaSV = checkMaSV(txtMaSV.getText().trim()));
                stm.setString(1, txtMaSV.getText().trim());
                stm.setString(2, txtUsername.getText().trim());
                if (flagEmail = checkEmail(txtEmail.getText().trim()));
                stm.setString(3, txtEmail.getText().trim());
                if (flagSoDT = checkSoDT(txtSoDT.getText().trim()));
                stm.setString(4, txtSoDT.getText().trim());
                String gt = "";
                if (rdoNam.isSelected()) {
                    gt = "1";
                } else {
                    gt = "0";
                }
                stm.setString(5, gt);
                stm.setString(6, txtAddress.getText().trim());
                stm.setString(7, fileNamePic.trim());
                if (flagMaSV == true && flagSoDT == true && flagEmail == true) {
                    stm.executeUpdate();
                    txtAddress.setBackground(Color.white);
                    JOptionPane.showMessageDialog(this, "Save success !");
                    stm.close();
                    connect.close();
                    loadDataToTable();
                    DoDuLieuLenComponent(0);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Save not success !");
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnSaveActionPerformed

    //eventClick hình
    private void tblHinhMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHinhMouseClicked
        JFileChooser fchooser = new JFileChooser();
        int result = fchooser.showOpenDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File file = fchooser.getSelectedFile();
            String fullPath = file.getAbsolutePath();
            fileNamePic = fchooser.getSelectedFile().getName();

            try {
                // copy hinh ảnh qua thư mục 
                Path src = Paths.get(fullPath);
                Path desl = Paths.get(PATH_IMAGE_SV + fileNamePic);
                Files.copy(src, desl, StandardCopyOption.REPLACE_EXISTING);
                // hiển thị hình ảnh
                loadImage(fileNamePic);
            } catch (IOException e) {
                System.out.println(e.toString());
            }

        }
    }//GEN-LAST:event_tblHinhMouseClicked

    // btnUpdate
    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if (txtMaSV.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Mã SV !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtMaSV.requestFocus();
            txtMaSV.setBackground(Color.yellow);
        } else if (txtUsername.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Tên SV !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtUsername.requestFocus();
            txtMaSV.setBackground(Color.white);
            txtUsername.setBackground(Color.yellow);
        } else if (txtEmail.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Email !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtEmail.requestFocus();
            txtUsername.setBackground(Color.white);
            txtEmail.setBackground(Color.yellow);
        } else if (txtSoDT.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Số điện thoại !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtSoDT.requestFocus();
            txtEmail.setBackground(Color.white);
            txtSoDT.setBackground(Color.yellow);
        } else if (!rdoNam.isSelected() && !rdoNu.isSelected()) {
            JOptionPane.showMessageDialog(this, "Bạn chưa chọn giới tính !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            rdoNam.requestFocus();
        } else if (txtAddress.getText().equals("")) {
            JOptionPane.showMessageDialog(this, "Bạn chưa nhập Địa chỉ !", "Thông báo", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocus();
            txtSoDT.setBackground(Color.white);
            txtAddress.setBackground(Color.yellow);
        } else {
            try {
                boolean flagSoDT;
                boolean flagEmail;
                Connection connect = DriverManager.getConnection(urlSQL, "sa", "123456");
                String sql = "update students set hoTen=?, email=?, soDT=?, goiTinh=?, diaChi=?, hinh=? where maSV=?";
                PreparedStatement stm = connect.prepareStatement(sql);

                stm.setString(1, txtUsername.getText().trim());
                if (flagEmail = checkEmail(txtEmail.getText().trim()));
                stm.setString(2, txtEmail.getText().trim());
                if (flagSoDT = checkSoDT(txtSoDT.getText().trim()));
                stm.setString(3, txtSoDT.getText().trim());
                String gt = "";
                if (rdoNam.isSelected()) {
                    gt = "1";
                } else {
                    gt = "0";
                }
                stm.setString(4, gt);
                stm.setString(5, txtAddress.getText().trim());
                stm.setString(6, fileNamePic.trim());
                stm.setString(7, txtMaSV.getText().trim());
                if (flagSoDT == true && flagEmail == true) {
                    stm.executeUpdate();
                    txtAddress.setBackground(Color.white);
                    JOptionPane.showMessageDialog(this, "Update success !");
                    stm.close();
                    connect.close();
                    loadDataToTable();
                    DoDuLieuLenComponent(0);
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Update not success !");
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    // xóa sinh viên
    public void deleteSinhVien() {
        try {
            Connection connection = DriverManager.getConnection(urlSQL, "sa", "123456");
            String deleteBangDiem = "delete from grade where MaSV=?";
            String deleteSV = "delete from students where MaSV=?";
            PreparedStatement ps = null;
            ps = connection.prepareStatement(deleteBangDiem);
            ps.setString(1, txtMaSV.getText().trim());
            ps.execute();
            ps = connection.prepareStatement(deleteSV);
            ps.setString(1, txtMaSV.getText().trim());
            ps.execute();
            ps.close();
            connection.close();
            loadDataToTable();
            DoDuLieuLenComponent(0);
            JOptionPane.showMessageDialog(this, "Xóa thành công!");
        } catch (SQLException e) {
            e.printStackTrace();
            System.out.println("Xóa không thành công!");
        }
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int a = JOptionPane.showConfirmDialog(this, "bạn có muốn xóa!");
        if (a == JOptionPane.YES_OPTION) {
            deleteSinhVien();
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void tblHinhMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHinhMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_tblHinhMouseEntered

    private void btnDangXuatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangXuatActionPerformed
        int a = JOptionPane.showConfirmDialog(this, "bạn có muốn thoát");
        if (a == 0) {
            MainForm QLSV = new MainForm();
            QLSV.setVisible(true);
            dispose();
        }
    }//GEN-LAST:event_btnDangXuatActionPerformed

    // Đổ dữ liệu lên form
    public void DoDuLieuLenComponent(int row) {
        if (row < 0) {
            return;
        }
        txtMaSV.setText(tblSinhVien.getValueAt(row, 0).toString());
        txtUsername.setText(tblSinhVien.getValueAt(row, 1).toString());
        txtEmail.setText(tblSinhVien.getValueAt(row, 2).toString());
        txtSoDT.setText(tblSinhVien.getValueAt(row, 3).toString());
        int gioiTinh = Integer.parseInt(tblSinhVien.getValueAt(row, 4).toString());
        if (gioiTinh == 1) {
            rdoNam.setSelected(true);
        } else {
            rdoNu.setSelected(true);
        }
        txtAddress.setText(tblSinhVien.getValueAt(row, 5).toString());
        loadImage(tblSinhVien.getValueAt(row, 6).toString());
    }

    // load ảnh
    public void loadImage(String imageSV) {
        ImageIcon image = new ImageIcon(PATH_IMAGE_SV + imageSV);
        Image im = image.getImage();
        ImageIcon icon = new ImageIcon(im.getScaledInstance(tblHinh.getWidth(), tblHinh.getHeight(), im.SCALE_SMOOTH));
        tblHinh.setIcon(icon);
    }

    // Resert
    public void Resert() {
        txtMaSV.setText("");
        txtUsername.setText("");
        txtEmail.setText("");
        txtAddress.setText("");
        txtSoDT.setText("");
        rdoNam.setSelected(true);
        tblHinh.setIcon(null);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVienn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVienn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVienn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLySinhVienn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new QuanLySinhVienn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangXuat;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JRadioButton rdoNam;
    private javax.swing.JRadioButton rdoNu;
    private javax.swing.JLabel tblClock;
    private javax.swing.JLabel tblHinh;
    private javax.swing.JTable tblSinhVien;
    private javax.swing.JTextArea txtAddress;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtMaSV;
    private javax.swing.JTextField txtSoDT;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables
}
